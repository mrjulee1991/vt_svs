/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vt.portlet.camera.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.vt.portlet.camera.model.Customer;
import com.vt.portlet.camera.model.CustomerModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Customer service. Represents a row in the &quot;vt_Customer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vt.portlet.camera.model.CustomerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CustomerImpl}.
 * </p>
 *
 * @author MrNet
 * @see CustomerImpl
 * @see com.vt.portlet.camera.model.Customer
 * @see com.vt.portlet.camera.model.CustomerModel
 * @generated
 */
public class CustomerModelImpl extends BaseModelImpl<Customer>
	implements CustomerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a customer model instance should use the {@link com.vt.portlet.camera.model.Customer} interface instead.
	 */
	public static final String TABLE_NAME = "vt_Customer";
	public static final Object[][] TABLE_COLUMNS = {
			{ "customerId", Types.BIGINT },
			{ "customerGroup", Types.BIGINT },
			{ "customerType", Types.BIGINT },
			{ "fullName", Types.VARCHAR },
			{ "birthday", Types.TIMESTAMP },
			{ "sex", Types.BIGINT },
			{ "nationalId", Types.BIGINT },
			{ "address", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "identifyNo", Types.VARCHAR },
			{ "issueDate", Types.TIMESTAMP },
			{ "issuePlace", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table vt_Customer (customerId LONG not null primary key,customerGroup LONG,customerType LONG,fullName VARCHAR(75) null,birthday DATE null,sex LONG,nationalId LONG,address VARCHAR(75) null,description VARCHAR(75) null,identifyNo VARCHAR(75) null,issueDate DATE null,issuePlace VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table vt_Customer";
	public static final String ORDER_BY_JPQL = " ORDER BY customer.fullName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vt_Customer.fullName ASC";
	public static final String DATA_SOURCE = "vtDataSource";
	public static final String SESSION_FACTORY = "vtSessionFactory";
	public static final String TX_MANAGER = "vtTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vt.portlet.camera.model.Customer"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vt.portlet.camera.model.Customer"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.vt.portlet.camera.model.Customer"),
			true);
	public static long FULLNAME_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vt.portlet.camera.model.Customer"));

	public CustomerModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _customerId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCustomerId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _customerId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Customer.class;
	}

	@Override
	public String getModelClassName() {
		return Customer.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("customerId", getCustomerId());
		attributes.put("customerGroup", getCustomerGroup());
		attributes.put("customerType", getCustomerType());
		attributes.put("fullName", getFullName());
		attributes.put("birthday", getBirthday());
		attributes.put("sex", getSex());
		attributes.put("nationalId", getNationalId());
		attributes.put("address", getAddress());
		attributes.put("description", getDescription());
		attributes.put("identifyNo", getIdentifyNo());
		attributes.put("issueDate", getIssueDate());
		attributes.put("issuePlace", getIssuePlace());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long customerId = (Long)attributes.get("customerId");

		if (customerId != null) {
			setCustomerId(customerId);
		}

		Long customerGroup = (Long)attributes.get("customerGroup");

		if (customerGroup != null) {
			setCustomerGroup(customerGroup);
		}

		Long customerType = (Long)attributes.get("customerType");

		if (customerType != null) {
			setCustomerType(customerType);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		Date birthday = (Date)attributes.get("birthday");

		if (birthday != null) {
			setBirthday(birthday);
		}

		Long sex = (Long)attributes.get("sex");

		if (sex != null) {
			setSex(sex);
		}

		Long nationalId = (Long)attributes.get("nationalId");

		if (nationalId != null) {
			setNationalId(nationalId);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String identifyNo = (String)attributes.get("identifyNo");

		if (identifyNo != null) {
			setIdentifyNo(identifyNo);
		}

		Date issueDate = (Date)attributes.get("issueDate");

		if (issueDate != null) {
			setIssueDate(issueDate);
		}

		String issuePlace = (String)attributes.get("issuePlace");

		if (issuePlace != null) {
			setIssuePlace(issuePlace);
		}
	}

	@Override
	public long getCustomerId() {
		return _customerId;
	}

	@Override
	public void setCustomerId(long customerId) {
		_customerId = customerId;
	}

	@Override
	public long getCustomerGroup() {
		return _customerGroup;
	}

	@Override
	public void setCustomerGroup(long customerGroup) {
		_customerGroup = customerGroup;
	}

	@Override
	public long getCustomerType() {
		return _customerType;
	}

	@Override
	public void setCustomerType(long customerType) {
		_customerType = customerType;
	}

	@Override
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_columnBitmask = -1L;

		if (_originalFullName == null) {
			_originalFullName = _fullName;
		}

		_fullName = fullName;
	}

	public String getOriginalFullName() {
		return GetterUtil.getString(_originalFullName);
	}

	@Override
	public Date getBirthday() {
		return _birthday;
	}

	@Override
	public void setBirthday(Date birthday) {
		_birthday = birthday;
	}

	@Override
	public long getSex() {
		return _sex;
	}

	@Override
	public void setSex(long sex) {
		_sex = sex;
	}

	@Override
	public long getNationalId() {
		return _nationalId;
	}

	@Override
	public void setNationalId(long nationalId) {
		_nationalId = nationalId;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getIdentifyNo() {
		if (_identifyNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _identifyNo;
		}
	}

	@Override
	public void setIdentifyNo(String identifyNo) {
		_identifyNo = identifyNo;
	}

	@Override
	public Date getIssueDate() {
		return _issueDate;
	}

	@Override
	public void setIssueDate(Date issueDate) {
		_issueDate = issueDate;
	}

	@Override
	public String getIssuePlace() {
		if (_issuePlace == null) {
			return StringPool.BLANK;
		}
		else {
			return _issuePlace;
		}
	}

	@Override
	public void setIssuePlace(String issuePlace) {
		_issuePlace = issuePlace;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Customer.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Customer toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Customer)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CustomerImpl customerImpl = new CustomerImpl();

		customerImpl.setCustomerId(getCustomerId());
		customerImpl.setCustomerGroup(getCustomerGroup());
		customerImpl.setCustomerType(getCustomerType());
		customerImpl.setFullName(getFullName());
		customerImpl.setBirthday(getBirthday());
		customerImpl.setSex(getSex());
		customerImpl.setNationalId(getNationalId());
		customerImpl.setAddress(getAddress());
		customerImpl.setDescription(getDescription());
		customerImpl.setIdentifyNo(getIdentifyNo());
		customerImpl.setIssueDate(getIssueDate());
		customerImpl.setIssuePlace(getIssuePlace());

		customerImpl.resetOriginalValues();

		return customerImpl;
	}

	@Override
	public int compareTo(Customer customer) {
		int value = 0;

		value = getFullName().compareTo(customer.getFullName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Customer)) {
			return false;
		}

		Customer customer = (Customer)obj;

		long primaryKey = customer.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CustomerModelImpl customerModelImpl = this;

		customerModelImpl._originalFullName = customerModelImpl._fullName;

		customerModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Customer> toCacheModel() {
		CustomerCacheModel customerCacheModel = new CustomerCacheModel();

		customerCacheModel.customerId = getCustomerId();

		customerCacheModel.customerGroup = getCustomerGroup();

		customerCacheModel.customerType = getCustomerType();

		customerCacheModel.fullName = getFullName();

		String fullName = customerCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			customerCacheModel.fullName = null;
		}

		Date birthday = getBirthday();

		if (birthday != null) {
			customerCacheModel.birthday = birthday.getTime();
		}
		else {
			customerCacheModel.birthday = Long.MIN_VALUE;
		}

		customerCacheModel.sex = getSex();

		customerCacheModel.nationalId = getNationalId();

		customerCacheModel.address = getAddress();

		String address = customerCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			customerCacheModel.address = null;
		}

		customerCacheModel.description = getDescription();

		String description = customerCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			customerCacheModel.description = null;
		}

		customerCacheModel.identifyNo = getIdentifyNo();

		String identifyNo = customerCacheModel.identifyNo;

		if ((identifyNo != null) && (identifyNo.length() == 0)) {
			customerCacheModel.identifyNo = null;
		}

		Date issueDate = getIssueDate();

		if (issueDate != null) {
			customerCacheModel.issueDate = issueDate.getTime();
		}
		else {
			customerCacheModel.issueDate = Long.MIN_VALUE;
		}

		customerCacheModel.issuePlace = getIssuePlace();

		String issuePlace = customerCacheModel.issuePlace;

		if ((issuePlace != null) && (issuePlace.length() == 0)) {
			customerCacheModel.issuePlace = null;
		}

		return customerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{customerId=");
		sb.append(getCustomerId());
		sb.append(", customerGroup=");
		sb.append(getCustomerGroup());
		sb.append(", customerType=");
		sb.append(getCustomerType());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", birthday=");
		sb.append(getBirthday());
		sb.append(", sex=");
		sb.append(getSex());
		sb.append(", nationalId=");
		sb.append(getNationalId());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", identifyNo=");
		sb.append(getIdentifyNo());
		sb.append(", issueDate=");
		sb.append(getIssueDate());
		sb.append(", issuePlace=");
		sb.append(getIssuePlace());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.vt.portlet.camera.model.Customer");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>customerId</column-name><column-value><![CDATA[");
		sb.append(getCustomerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerGroup</column-name><column-value><![CDATA[");
		sb.append(getCustomerGroup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerType</column-name><column-value><![CDATA[");
		sb.append(getCustomerType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthday</column-name><column-value><![CDATA[");
		sb.append(getBirthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sex</column-name><column-value><![CDATA[");
		sb.append(getSex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nationalId</column-name><column-value><![CDATA[");
		sb.append(getNationalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identifyNo</column-name><column-value><![CDATA[");
		sb.append(getIdentifyNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issueDate</column-name><column-value><![CDATA[");
		sb.append(getIssueDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuePlace</column-name><column-value><![CDATA[");
		sb.append(getIssuePlace());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Customer.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Customer.class
		};
	private long _customerId;
	private long _customerGroup;
	private long _customerType;
	private String _fullName;
	private String _originalFullName;
	private Date _birthday;
	private long _sex;
	private long _nationalId;
	private String _address;
	private String _description;
	private String _identifyNo;
	private Date _issueDate;
	private String _issuePlace;
	private long _columnBitmask;
	private Customer _escapedModel;
}