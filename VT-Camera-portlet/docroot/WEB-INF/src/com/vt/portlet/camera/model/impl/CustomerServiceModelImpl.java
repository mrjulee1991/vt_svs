/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vt.portlet.camera.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.vt.portlet.camera.model.CustomerService;
import com.vt.portlet.camera.model.CustomerServiceModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CustomerService service. Represents a row in the &quot;vt_Customer_service&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vt.portlet.camera.model.CustomerServiceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CustomerServiceImpl}.
 * </p>
 *
 * @author MrNet
 * @see CustomerServiceImpl
 * @see com.vt.portlet.camera.model.CustomerService
 * @see com.vt.portlet.camera.model.CustomerServiceModel
 * @generated
 */
public class CustomerServiceModelImpl extends BaseModelImpl<CustomerService>
	implements CustomerServiceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a customer service model instance should use the {@link com.vt.portlet.camera.model.CustomerService} interface instead.
	 */
	public static final String TABLE_NAME = "vt_Customer_service";
	public static final Object[][] TABLE_COLUMNS = {
			{ "customerServiceId", Types.BIGINT },
			{ "customerId", Types.BIGINT },
			{ "deployName", Types.VARCHAR },
			{ "appointDate", Types.TIMESTAMP },
			{ "serviceType", Types.BIGINT },
			{ "address", Types.VARCHAR },
			{ "deployType", Types.BIGINT },
			{ "packageType", Types.VARCHAR },
			{ "isdnNo", Types.VARCHAR },
			{ "accountType", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table vt_Customer_service (customerServiceId LONG not null primary key,customerId LONG,deployName VARCHAR(75) null,appointDate DATE null,serviceType LONG,address VARCHAR(75) null,deployType LONG,packageType VARCHAR(75) null,isdnNo VARCHAR(75) null,accountType LONG)";
	public static final String TABLE_SQL_DROP = "drop table vt_Customer_service";
	public static final String ORDER_BY_JPQL = " ORDER BY customerService.customerServiceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vt_Customer_service.customerServiceId ASC";
	public static final String DATA_SOURCE = "vtDataSource";
	public static final String SESSION_FACTORY = "vtSessionFactory";
	public static final String TX_MANAGER = "vtTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vt.portlet.camera.model.CustomerService"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vt.portlet.camera.model.CustomerService"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.vt.portlet.camera.model.CustomerService"),
			true);
	public static long CUSTOMERID_COLUMN_BITMASK = 1L;
	public static long CUSTOMERSERVICEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vt.portlet.camera.model.CustomerService"));

	public CustomerServiceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _customerServiceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCustomerServiceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _customerServiceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CustomerService.class;
	}

	@Override
	public String getModelClassName() {
		return CustomerService.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("customerServiceId", getCustomerServiceId());
		attributes.put("customerId", getCustomerId());
		attributes.put("deployName", getDeployName());
		attributes.put("appointDate", getAppointDate());
		attributes.put("serviceType", getServiceType());
		attributes.put("address", getAddress());
		attributes.put("deployType", getDeployType());
		attributes.put("packageType", getPackageType());
		attributes.put("isdnNo", getIsdnNo());
		attributes.put("accountType", getAccountType());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long customerServiceId = (Long)attributes.get("customerServiceId");

		if (customerServiceId != null) {
			setCustomerServiceId(customerServiceId);
		}

		Long customerId = (Long)attributes.get("customerId");

		if (customerId != null) {
			setCustomerId(customerId);
		}

		String deployName = (String)attributes.get("deployName");

		if (deployName != null) {
			setDeployName(deployName);
		}

		Date appointDate = (Date)attributes.get("appointDate");

		if (appointDate != null) {
			setAppointDate(appointDate);
		}

		Long serviceType = (Long)attributes.get("serviceType");

		if (serviceType != null) {
			setServiceType(serviceType);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		Long deployType = (Long)attributes.get("deployType");

		if (deployType != null) {
			setDeployType(deployType);
		}

		String packageType = (String)attributes.get("packageType");

		if (packageType != null) {
			setPackageType(packageType);
		}

		String isdnNo = (String)attributes.get("isdnNo");

		if (isdnNo != null) {
			setIsdnNo(isdnNo);
		}

		Long accountType = (Long)attributes.get("accountType");

		if (accountType != null) {
			setAccountType(accountType);
		}
	}

	@Override
	public long getCustomerServiceId() {
		return _customerServiceId;
	}

	@Override
	public void setCustomerServiceId(long customerServiceId) {
		_customerServiceId = customerServiceId;
	}

	@Override
	public long getCustomerId() {
		return _customerId;
	}

	@Override
	public void setCustomerId(long customerId) {
		_columnBitmask |= CUSTOMERID_COLUMN_BITMASK;

		if (!_setOriginalCustomerId) {
			_setOriginalCustomerId = true;

			_originalCustomerId = _customerId;
		}

		_customerId = customerId;
	}

	public long getOriginalCustomerId() {
		return _originalCustomerId;
	}

	@Override
	public String getDeployName() {
		if (_deployName == null) {
			return StringPool.BLANK;
		}
		else {
			return _deployName;
		}
	}

	@Override
	public void setDeployName(String deployName) {
		_deployName = deployName;
	}

	@Override
	public Date getAppointDate() {
		return _appointDate;
	}

	@Override
	public void setAppointDate(Date appointDate) {
		_appointDate = appointDate;
	}

	@Override
	public long getServiceType() {
		return _serviceType;
	}

	@Override
	public void setServiceType(long serviceType) {
		_serviceType = serviceType;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public long getDeployType() {
		return _deployType;
	}

	@Override
	public void setDeployType(long deployType) {
		_deployType = deployType;
	}

	@Override
	public String getPackageType() {
		if (_packageType == null) {
			return StringPool.BLANK;
		}
		else {
			return _packageType;
		}
	}

	@Override
	public void setPackageType(String packageType) {
		_packageType = packageType;
	}

	@Override
	public String getIsdnNo() {
		if (_isdnNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _isdnNo;
		}
	}

	@Override
	public void setIsdnNo(String isdnNo) {
		_isdnNo = isdnNo;
	}

	@Override
	public long getAccountType() {
		return _accountType;
	}

	@Override
	public void setAccountType(long accountType) {
		_accountType = accountType;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CustomerService.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CustomerService toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CustomerService)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CustomerServiceImpl customerServiceImpl = new CustomerServiceImpl();

		customerServiceImpl.setCustomerServiceId(getCustomerServiceId());
		customerServiceImpl.setCustomerId(getCustomerId());
		customerServiceImpl.setDeployName(getDeployName());
		customerServiceImpl.setAppointDate(getAppointDate());
		customerServiceImpl.setServiceType(getServiceType());
		customerServiceImpl.setAddress(getAddress());
		customerServiceImpl.setDeployType(getDeployType());
		customerServiceImpl.setPackageType(getPackageType());
		customerServiceImpl.setIsdnNo(getIsdnNo());
		customerServiceImpl.setAccountType(getAccountType());

		customerServiceImpl.resetOriginalValues();

		return customerServiceImpl;
	}

	@Override
	public int compareTo(CustomerService customerService) {
		long primaryKey = customerService.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CustomerService)) {
			return false;
		}

		CustomerService customerService = (CustomerService)obj;

		long primaryKey = customerService.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CustomerServiceModelImpl customerServiceModelImpl = this;

		customerServiceModelImpl._originalCustomerId = customerServiceModelImpl._customerId;

		customerServiceModelImpl._setOriginalCustomerId = false;

		customerServiceModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CustomerService> toCacheModel() {
		CustomerServiceCacheModel customerServiceCacheModel = new CustomerServiceCacheModel();

		customerServiceCacheModel.customerServiceId = getCustomerServiceId();

		customerServiceCacheModel.customerId = getCustomerId();

		customerServiceCacheModel.deployName = getDeployName();

		String deployName = customerServiceCacheModel.deployName;

		if ((deployName != null) && (deployName.length() == 0)) {
			customerServiceCacheModel.deployName = null;
		}

		Date appointDate = getAppointDate();

		if (appointDate != null) {
			customerServiceCacheModel.appointDate = appointDate.getTime();
		}
		else {
			customerServiceCacheModel.appointDate = Long.MIN_VALUE;
		}

		customerServiceCacheModel.serviceType = getServiceType();

		customerServiceCacheModel.address = getAddress();

		String address = customerServiceCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			customerServiceCacheModel.address = null;
		}

		customerServiceCacheModel.deployType = getDeployType();

		customerServiceCacheModel.packageType = getPackageType();

		String packageType = customerServiceCacheModel.packageType;

		if ((packageType != null) && (packageType.length() == 0)) {
			customerServiceCacheModel.packageType = null;
		}

		customerServiceCacheModel.isdnNo = getIsdnNo();

		String isdnNo = customerServiceCacheModel.isdnNo;

		if ((isdnNo != null) && (isdnNo.length() == 0)) {
			customerServiceCacheModel.isdnNo = null;
		}

		customerServiceCacheModel.accountType = getAccountType();

		return customerServiceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{customerServiceId=");
		sb.append(getCustomerServiceId());
		sb.append(", customerId=");
		sb.append(getCustomerId());
		sb.append(", deployName=");
		sb.append(getDeployName());
		sb.append(", appointDate=");
		sb.append(getAppointDate());
		sb.append(", serviceType=");
		sb.append(getServiceType());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", deployType=");
		sb.append(getDeployType());
		sb.append(", packageType=");
		sb.append(getPackageType());
		sb.append(", isdnNo=");
		sb.append(getIsdnNo());
		sb.append(", accountType=");
		sb.append(getAccountType());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.vt.portlet.camera.model.CustomerService");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>customerServiceId</column-name><column-value><![CDATA[");
		sb.append(getCustomerServiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerId</column-name><column-value><![CDATA[");
		sb.append(getCustomerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deployName</column-name><column-value><![CDATA[");
		sb.append(getDeployName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appointDate</column-name><column-value><![CDATA[");
		sb.append(getAppointDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceType</column-name><column-value><![CDATA[");
		sb.append(getServiceType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deployType</column-name><column-value><![CDATA[");
		sb.append(getDeployType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>packageType</column-name><column-value><![CDATA[");
		sb.append(getPackageType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isdnNo</column-name><column-value><![CDATA[");
		sb.append(getIsdnNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountType</column-name><column-value><![CDATA[");
		sb.append(getAccountType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CustomerService.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CustomerService.class
		};
	private long _customerServiceId;
	private long _customerId;
	private long _originalCustomerId;
	private boolean _setOriginalCustomerId;
	private String _deployName;
	private Date _appointDate;
	private long _serviceType;
	private String _address;
	private long _deployType;
	private String _packageType;
	private String _isdnNo;
	private long _accountType;
	private long _columnBitmask;
	private CustomerService _escapedModel;
}